apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 (06a2e56)
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: redis
    spec:
      containers:
      - args:
        - sh
        - -c
        - redis-server --appendonly yes --requirepass $REDIS_PASSWORD
        env:
        - name: NAUTOBOT_ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_ALLOWED_HOSTS
              name: redis-dev-env
        - name: NAUTOBOT_CHANGELOG_RETENTION
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_CHANGELOG_RETENTION
              name: redis-dev-env
        - name: NAUTOBOT_CONFIG
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_CONFIG
              name: redis-dev-env
        - name: NAUTOBOT_DB_ENGINE
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_DB_ENGINE
              name: redis-dev-env
        - name: NAUTOBOT_DB_HOST
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_DB_HOST
              name: redis-dev-env
        - name: NAUTOBOT_DB_NAME
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_DB_NAME
              name: redis-dev-env
        - name: NAUTOBOT_DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_DB_PASSWORD
              name: redis-dev-env
        - name: NAUTOBOT_DB_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_DB_TIMEOUT
              name: redis-dev-env
        - name: NAUTOBOT_DB_USER
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_DB_USER
              name: redis-dev-env
        - name: NAUTOBOT_MAX_PAGE_SIZE
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_MAX_PAGE_SIZE
              name: redis-dev-env
        - name: NAUTOBOT_NAPALM_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_NAPALM_TIMEOUT
              name: redis-dev-env
        - name: NAUTOBOT_REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_REDIS_HOST
              name: redis-dev-env
        - name: NAUTOBOT_REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_REDIS_PASSWORD
              name: redis-dev-env
        - name: NAUTOBOT_REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_REDIS_PORT
              name: redis-dev-env
        - name: NAUTOBOT_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_SECRET_KEY
              name: redis-dev-env
        - name: NAUTOBOT_SELENIUM_HOST
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_SELENIUM_HOST
              name: redis-dev-env
        - name: NAUTOBOT_SELENIUM_URL
          valueFrom:
            configMapKeyRef:
              key: NAUTOBOT_SELENIUM_URL
              name: redis-dev-env
        - name: PGPASSWORD
          valueFrom:
            configMapKeyRef:
              key: PGPASSWORD
              name: redis-dev-env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: redis-dev-env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: redis-dev-env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: redis-dev-env
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: REDIS_PASSWORD
              name: redis-dev-env
        image: redis:6-alpine
        name: redis
        resources: {}
      restartPolicy: Always
status: {}
